from ...entitas import Context, Entity, PrimaryEntityIndex, EntityIndex, Matcherfrom .ContextComponents import ContextComponents as Context_compsclass ContextEntity(Entity):    def __init__(self):        super().__init__()        self.muIndex = None        self.outPut = None        self.tag = None        self.components = None        self.source = None        self.name = None        self.customInc = None        return    def hasMuIndex(self):        return self.has(Context_comps.MuIndex)    def addMuIndex (self, value):        self.add(Context_comps.MuIndex, value)        return self    def replaceMuIndex (self,value):        self.replace(Context_comps.MuIndex, value)        return self    def removeMuIndex (self):        self.remove(Context_comps.MuIndex)        return self    def hasOutPut(self):        return self.has(Context_comps.OutPut)    def addOutPut (self, value):        self.add(Context_comps.OutPut, value)        return self    def replaceOutPut (self,value):        self.replace(Context_comps.OutPut, value)        return self    def removeOutPut (self):        self.remove(Context_comps.OutPut)        return self    def hasTag(self):        return self.has(Context_comps.Tag)    def addTag (self, value):        self.add(Context_comps.Tag, value)        return self    def replaceTag (self,value):        self.replace(Context_comps.Tag, value)        return self    def removeTag (self):        self.remove(Context_comps.Tag)        return self    def hasComponents(self):        return self.has(Context_comps.Components)    def addComponents (self, value):        self.add(Context_comps.Components, value)        return self    def replaceComponents (self,value):        self.replace(Context_comps.Components, value)        return self    def removeComponents (self):        self.remove(Context_comps.Components)        return self    def hasSource(self):        return self.has(Context_comps.Source)    def addSource (self, value):        self.add(Context_comps.Source, value)        return self    def replaceSource (self,value):        self.replace(Context_comps.Source, value)        return self    def removeSource (self):        self.remove(Context_comps.Source)        return self    def hasName(self):        return self.has(Context_comps.Name)    def addName (self, name, Name):        self.add(Context_comps.Name, name, Name)        return self    def replaceName (self,name, Name):        self.replace(Context_comps.Name, name, Name)        return self    def removeName (self):        self.remove(Context_comps.Name)        return self    def hasCustomInc(self):        return self.has(Context_comps.CustomInc)    def addCustomInc (self, value):        self.add(Context_comps.CustomInc, value)        return self    def replaceCustomInc (self,value):        self.replace(Context_comps.CustomInc, value)        return self    def removeCustomInc (self):        self.remove(Context_comps.CustomInc)        return self