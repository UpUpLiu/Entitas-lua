local EntityIndex = require("Common.entitas.EntityIndex")local PrimaryEntityIndex = require("Common.entitas.PrimaryEntityIndex")local Matcher = require("Common.entitas.Matcher")local Dress_comps = require('.DressComponents')---@class DressContext : entitas.Context---@field createEntity fun():DressEntitylocal DressContext = {}---@return boolfunction DressContext:removeDestroy()    self:remove_unique_component('destroy')end---@return boolfunction DressContext:removeItemInfo()    self:remove_unique_component('itemInfo')end---@return boolfunction DressContext:removeConfig()    self:remove_unique_component('config')end---@return boolfunction DressContext:removeNum()    self:remove_unique_component('num')end---@return boolfunction DressContext:removeType_id()    self:remove_unique_component('type_id')end---@return DressEntity---@privatefunction DressContext:_create_entity()    return self._entity_class:new()end---@return DressEntityfunction DressContext:CreateEntity()    return self:create_entity()end---@return DressContextfunction DressContext.DressContext()    return classMap.DressContext:new(classMap.DressEntity)endfunction DressContext:initGenerateEntityIndexes()endreturn DressContext