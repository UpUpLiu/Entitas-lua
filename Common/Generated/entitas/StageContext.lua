local EntityIndex = require("Common.entitas.EntityIndex")local PrimaryEntityIndex = require("Common.entitas.PrimaryEntityIndex")local Matcher = require("Common.entitas.Matcher")local Stage_comps = require('.StageComponents')---@class StageContext : entitas.Context---@field createEntity fun():StageEntitylocal StageContext = {}---@return boolfunction StageContext:removeDestroy()    self:remove_unique_component('destroy')end---@return boolfunction StageContext:removeType_id()    self:remove_unique_component('type_id')end---@return boolfunction StageContext:removeNum()    self:remove_unique_component('num')end---@return boolfunction StageContext:removeConfig()    self:remove_unique_component('config')end---@return boolfunction StageContext:removeAppraise()    self:remove_unique_component('appraise')end---@return boolfunction StageContext:removeSource()    self:remove_unique_component('source')end---@return StageEntity---@privatefunction StageContext:_create_entity()    return self._entity_class:new()end---@return StageEntityfunction StageContext:CreateEntity()    return self:create_entity()end---@return StageContextfunction StageContext.StageContext()    return classMap.StageContext:new(classMap.StageEntity)endfunction StageContext:initGenerateEntityIndexes()endreturn StageContext