local Prop_comps = require('.PropComponents')local set = require('Common.container.set')---@class PropEntity---@field config Prop.ConfigComponent---@field itemInfo Prop.ItemInfoComponent---@field num Prop.NumComponent---@field type_id Prop.Type_idComponentlocal PropEntity = {}function PropEntity:Ctor(...)    self.__base.Ctor(self, ...)end---@return booleanfunction PropEntity:hasConfig()  return self:has(Prop_comps.Config) ~= nilend---@param value  ItemTemplate---@returns PropEntityfunction PropEntity:addConfig (value)    self:add(Prop_comps.Config, value)    return selfendfunction PropEntity:replaceConfig (value)    self:replace(Prop_comps.Config, value)    return selfendfunction PropEntity:removeConfig ()    self:remove(Prop_comps.Config)    return selfend---@return booleanfunction PropEntity:hasDestroy()  return self:has(Prop_comps.Destroy) ~= nilend---@return PropEntityfunction PropEntity:setDestroy(v)    if (v ~= self:hasDestroy()) then        if (v) then            self:add(Prop_comps.Destroy, true)        else            self:remove(Prop_comps.Destroy)        end    end    return selfend---@return booleanfunction PropEntity:hasItemInfo()  return self:has(Prop_comps.ItemInfo) ~= nilend---@param value  ItemInfo---@returns PropEntityfunction PropEntity:addItemInfo (value)    self:add(Prop_comps.ItemInfo, value)    return selfendfunction PropEntity:replaceItemInfo (value)    self:replace(Prop_comps.ItemInfo, value)    return selfendfunction PropEntity:removeItemInfo ()    self:remove(Prop_comps.ItemInfo)    return selfend---@return booleanfunction PropEntity:hasNum()  return self:has(Prop_comps.Num) ~= nilend---@param value  number---@returns PropEntityfunction PropEntity:addNum (value)    self:add(Prop_comps.Num, value)    return selfendfunction PropEntity:replaceNum (value)    self:replace(Prop_comps.Num, value)    return selfendfunction PropEntity:removeNum ()    self:remove(Prop_comps.Num)    return selfend---@return booleanfunction PropEntity:hasType_id()  return self:has(Prop_comps.Type_id) ~= nilend---@param value  number---@returns PropEntityfunction PropEntity:addType_id (value)    self:add(Prop_comps.Type_id, value)    return selfendfunction PropEntity:replaceType_id (value)    self:replace(Prop_comps.Type_id, value)    return selfendfunction PropEntity:removeType_id ()    self:remove(Prop_comps.Type_id)    return selfendreturn PropEntity