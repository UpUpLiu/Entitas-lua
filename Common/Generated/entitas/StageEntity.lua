local Stage_comps = require('.StageComponents')local set = require('Common.container.set')---@class StageEntity---@field type_id Stage.Type_idComponent---@field appraise Stage.AppraiseComponent---@field config Stage.ConfigComponent---@field num Stage.NumComponent---@field source Stage.SourceComponentlocal StageEntity = {}---@return booleanfunction StageEntity:hasDestroy()  return self:has(Stage_comps.Destroy) ~= nilend---@return StageEntityfunction StageEntity:setDestroy(v)    if (v ~= self:hasDestroy()) then        if (v) then            self:add(Stage_comps.Destroy, true)        else            self:remove(Stage_comps.Destroy)        end    end    return selfend---@return booleanfunction StageEntity:hasType_id()  return self:has(Stage_comps.Type_id) ~= nilend---@param value  number---@returns StageEntityfunction StageEntity:addType_id (value)    self:add(Stage_comps.Type_id, value)    return selfendfunction StageEntity:replaceType_id (value)    self:replace(Stage_comps.Type_id, value)    return selfendfunction StageEntity:removeType_id ()    self:remove(Stage_comps.Type_id)    return selfend---@return booleanfunction StageEntity:hasAppraise()  return self:has(Stage_comps.Appraise) ~= nilend---@param value  Const.AppraiseType---@returns StageEntityfunction StageEntity:addAppraise (value)    self:add(Stage_comps.Appraise, value)    return selfendfunction StageEntity:replaceAppraise (value)    self:replace(Stage_comps.Appraise, value)    return selfendfunction StageEntity:removeAppraise ()    self:remove(Stage_comps.Appraise)    return selfend---@return booleanfunction StageEntity:hasConfig()  return self:has(Stage_comps.Config) ~= nilend---@param value  StageTemplate---@returns StageEntityfunction StageEntity:addConfig (value)    self:add(Stage_comps.Config, value)    return selfendfunction StageEntity:replaceConfig (value)    self:replace(Stage_comps.Config, value)    return selfendfunction StageEntity:removeConfig ()    self:remove(Stage_comps.Config)    return selfend---@return booleanfunction StageEntity:hasNum()  return self:has(Stage_comps.Num) ~= nilend---@param value  number---@returns StageEntityfunction StageEntity:addNum (value)    self:add(Stage_comps.Num, value)    return selfendfunction StageEntity:replaceNum (value)    self:replace(Stage_comps.Num, value)    return selfendfunction StageEntity:removeNum ()    self:remove(Stage_comps.Num)    return selfend---@return booleanfunction StageEntity:hasSource()  return self:has(Stage_comps.Source) ~= nilend---@param value  ItemInfo---@returns StageEntityfunction StageEntity:addSource (value)    self:add(Stage_comps.Source, value)    return selfendfunction StageEntity:replaceSource (value)    self:replace(Stage_comps.Source, value)    return selfendfunction StageEntity:removeSource ()    self:remove(Stage_comps.Source)    return selfendreturn StageEntity