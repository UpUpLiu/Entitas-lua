local PlayPlayer_comps = require('.PlayPlayerComponents')local set = require('Common.container.set')---@class PlayPlayerEntity---@field hair PlayPlayer.HairComponent---@field righthand PlayPlayer.RighthandComponent---@field waist PlayPlayer.WaistComponent---@field shoe PlayPlayer.ShoeComponent---@field socks PlayPlayer.SocksComponent---@field gloves PlayPlayer.GlovesComponent---@field skills PlayPlayer.SkillsComponent---@field bag PlayPlayer.BagComponent---@field bracelet PlayPlayer.BraceletComponent---@field stageId PlayPlayer.StageIdComponent---@field shoulder PlayPlayer.ShoulderComponent---@field necklace PlayPlayer.NecklaceComponent---@field top PlayPlayer.TopComponent---@field ear PlayPlayer.EarComponent---@field coat PlayPlayer.CoatComponent---@field sockdeco PlayPlayer.SockdecoComponent---@field head PlayPlayer.HeadComponent---@field dress PlayPlayer.DressComponentlocal PlayPlayerEntity = {}---@return booleanfunction PlayPlayerEntity:hasDestroy()  return self:has(PlayPlayer_comps.Destroy) ~= nilend---@return PlayPlayerEntityfunction PlayPlayerEntity:setDestroy(v)    if (v ~= self:hasDestroy()) then        if (v) then            self:add(PlayPlayer_comps.Destroy, true)        else            self:remove(PlayPlayer_comps.Destroy)        end    end    return selfend---@return booleanfunction PlayPlayerEntity:hasHair()  return self:has(PlayPlayer_comps.Hair) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addHair (value)    self:add(PlayPlayer_comps.Hair, value)    return selfendfunction PlayPlayerEntity:replaceHair (value)    self:replace(PlayPlayer_comps.Hair, value)    return selfendfunction PlayPlayerEntity:removeHair ()    self:remove(PlayPlayer_comps.Hair)    return selfend---@return booleanfunction PlayPlayerEntity:hasRighthand()  return self:has(PlayPlayer_comps.Righthand) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addRighthand (value)    self:add(PlayPlayer_comps.Righthand, value)    return selfendfunction PlayPlayerEntity:replaceRighthand (value)    self:replace(PlayPlayer_comps.Righthand, value)    return selfendfunction PlayPlayerEntity:removeRighthand ()    self:remove(PlayPlayer_comps.Righthand)    return selfend---@return booleanfunction PlayPlayerEntity:hasWaist()  return self:has(PlayPlayer_comps.Waist) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addWaist (value)    self:add(PlayPlayer_comps.Waist, value)    return selfendfunction PlayPlayerEntity:replaceWaist (value)    self:replace(PlayPlayer_comps.Waist, value)    return selfendfunction PlayPlayerEntity:removeWaist ()    self:remove(PlayPlayer_comps.Waist)    return selfend---@return booleanfunction PlayPlayerEntity:hasShoe()  return self:has(PlayPlayer_comps.Shoe) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addShoe (value)    self:add(PlayPlayer_comps.Shoe, value)    return selfendfunction PlayPlayerEntity:replaceShoe (value)    self:replace(PlayPlayer_comps.Shoe, value)    return selfendfunction PlayPlayerEntity:removeShoe ()    self:remove(PlayPlayer_comps.Shoe)    return selfend---@return booleanfunction PlayPlayerEntity:hasSocks()  return self:has(PlayPlayer_comps.Socks) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addSocks (value)    self:add(PlayPlayer_comps.Socks, value)    return selfendfunction PlayPlayerEntity:replaceSocks (value)    self:replace(PlayPlayer_comps.Socks, value)    return selfendfunction PlayPlayerEntity:removeSocks ()    self:remove(PlayPlayer_comps.Socks)    return selfend---@return booleanfunction PlayPlayerEntity:hasGloves()  return self:has(PlayPlayer_comps.Gloves) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addGloves (value)    self:add(PlayPlayer_comps.Gloves, value)    return selfendfunction PlayPlayerEntity:replaceGloves (value)    self:replace(PlayPlayer_comps.Gloves, value)    return selfendfunction PlayPlayerEntity:removeGloves ()    self:remove(PlayPlayer_comps.Gloves)    return selfend---@return booleanfunction PlayPlayerEntity:hasSkills()  return self:has(PlayPlayer_comps.Skills) ~= nilend---@param values  number[]---@returns PlayPlayerEntityfunction PlayPlayerEntity:addSkills (values)    self:add(PlayPlayer_comps.Skills, values)    return selfendfunction PlayPlayerEntity:replaceSkills (values)    self:replace(PlayPlayer_comps.Skills, values)    return selfendfunction PlayPlayerEntity:removeSkills ()    self:remove(PlayPlayer_comps.Skills)    return selfend---@return booleanfunction PlayPlayerEntity:hasBag()  return self:has(PlayPlayer_comps.Bag) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addBag (value)    self:add(PlayPlayer_comps.Bag, value)    return selfendfunction PlayPlayerEntity:replaceBag (value)    self:replace(PlayPlayer_comps.Bag, value)    return selfendfunction PlayPlayerEntity:removeBag ()    self:remove(PlayPlayer_comps.Bag)    return selfend---@return booleanfunction PlayPlayerEntity:hasBracelet()  return self:has(PlayPlayer_comps.Bracelet) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addBracelet (value)    self:add(PlayPlayer_comps.Bracelet, value)    return selfendfunction PlayPlayerEntity:replaceBracelet (value)    self:replace(PlayPlayer_comps.Bracelet, value)    return selfendfunction PlayPlayerEntity:removeBracelet ()    self:remove(PlayPlayer_comps.Bracelet)    return selfend---@return booleanfunction PlayPlayerEntity:hasStageId()  return self:has(PlayPlayer_comps.StageId) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addStageId (value)    self:add(PlayPlayer_comps.StageId, value)    return selfendfunction PlayPlayerEntity:replaceStageId (value)    self:replace(PlayPlayer_comps.StageId, value)    return selfendfunction PlayPlayerEntity:removeStageId ()    self:remove(PlayPlayer_comps.StageId)    return selfend---@return booleanfunction PlayPlayerEntity:hasShoulder()  return self:has(PlayPlayer_comps.Shoulder) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addShoulder (value)    self:add(PlayPlayer_comps.Shoulder, value)    return selfendfunction PlayPlayerEntity:replaceShoulder (value)    self:replace(PlayPlayer_comps.Shoulder, value)    return selfendfunction PlayPlayerEntity:removeShoulder ()    self:remove(PlayPlayer_comps.Shoulder)    return selfend---@return booleanfunction PlayPlayerEntity:hasNecklace()  return self:has(PlayPlayer_comps.Necklace) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addNecklace (value)    self:add(PlayPlayer_comps.Necklace, value)    return selfendfunction PlayPlayerEntity:replaceNecklace (value)    self:replace(PlayPlayer_comps.Necklace, value)    return selfendfunction PlayPlayerEntity:removeNecklace ()    self:remove(PlayPlayer_comps.Necklace)    return selfend---@return booleanfunction PlayPlayerEntity:hasTop()  return self:has(PlayPlayer_comps.Top) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addTop (value)    self:add(PlayPlayer_comps.Top, value)    return selfendfunction PlayPlayerEntity:replaceTop (value)    self:replace(PlayPlayer_comps.Top, value)    return selfendfunction PlayPlayerEntity:removeTop ()    self:remove(PlayPlayer_comps.Top)    return selfend---@return booleanfunction PlayPlayerEntity:hasEar()  return self:has(PlayPlayer_comps.Ear) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addEar (value)    self:add(PlayPlayer_comps.Ear, value)    return selfendfunction PlayPlayerEntity:replaceEar (value)    self:replace(PlayPlayer_comps.Ear, value)    return selfendfunction PlayPlayerEntity:removeEar ()    self:remove(PlayPlayer_comps.Ear)    return selfend---@return booleanfunction PlayPlayerEntity:hasCoat()  return self:has(PlayPlayer_comps.Coat) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addCoat (value)    self:add(PlayPlayer_comps.Coat, value)    return selfendfunction PlayPlayerEntity:replaceCoat (value)    self:replace(PlayPlayer_comps.Coat, value)    return selfendfunction PlayPlayerEntity:removeCoat ()    self:remove(PlayPlayer_comps.Coat)    return selfend---@return booleanfunction PlayPlayerEntity:hasSockdeco()  return self:has(PlayPlayer_comps.Sockdeco) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addSockdeco (value)    self:add(PlayPlayer_comps.Sockdeco, value)    return selfendfunction PlayPlayerEntity:replaceSockdeco (value)    self:replace(PlayPlayer_comps.Sockdeco, value)    return selfendfunction PlayPlayerEntity:removeSockdeco ()    self:remove(PlayPlayer_comps.Sockdeco)    return selfend---@return booleanfunction PlayPlayerEntity:hasHead()  return self:has(PlayPlayer_comps.Head) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addHead (value)    self:add(PlayPlayer_comps.Head, value)    return selfendfunction PlayPlayerEntity:replaceHead (value)    self:replace(PlayPlayer_comps.Head, value)    return selfendfunction PlayPlayerEntity:removeHead ()    self:remove(PlayPlayer_comps.Head)    return selfend---@return booleanfunction PlayPlayerEntity:hasDress()  return self:has(PlayPlayer_comps.Dress) ~= nilend---@param value  number---@returns PlayPlayerEntityfunction PlayPlayerEntity:addDress (value)    self:add(PlayPlayer_comps.Dress, value)    return selfendfunction PlayPlayerEntity:replaceDress (value)    self:replace(PlayPlayer_comps.Dress, value)    return selfendfunction PlayPlayerEntity:removeDress ()    self:remove(PlayPlayer_comps.Dress)    return selfendreturn PlayPlayerEntity