local Matcher = require("Common.entitas.Matcher")local GroupEvent = require("Common.entitas.GroupEvent")local Player_comps = require('.PlayerComponents')local PlayerMatcher = require('.PlayerMatchers')local tabledeepcopy = table.deepcopy---@class AnyNameListenerEventSystem : entitas.ReactiveSystemlocal M = class({},'AnyNameListenerEventSystem', classMap.ReactiveSystem)function M:Ctor(context)    M.__super.Ctor(self, context)    self._listeners = context:get_group(PlayerMatcher.AnyNameListener)endfunction M:get_trigger()    return {        {            Matcher({Player_comps.Name}),            GroupEvent.ADDED | GroupEvent.UPDATE        }    }endfunction M:filter(entity)    return entity:hasName()endfunction M:execute(es)    local buffer = self._listeners:get_entity_buffer()    es:foreach( function( e  )        local comp = e.name        for _, entity in pairs(buffer) do            local list = tabledeepcopy(entity.anyNameListener.value:get_buffer())            for i = 1, #list do                list[i]:OnAnyNameListener(e , comp.value );            end        end    end)endreturn M