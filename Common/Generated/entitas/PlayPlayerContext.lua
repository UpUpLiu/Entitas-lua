local EntityIndex = require("Common.entitas.EntityIndex")local PrimaryEntityIndex = require("Common.entitas.PrimaryEntityIndex")local Matcher = require("Common.entitas.Matcher")local PlayPlayer_comps = require('.PlayPlayerComponents')---@class PlayPlayerContext : entitas.Context---@field createEntity fun():PlayPlayerEntitylocal PlayPlayerContext = {}function PlayPlayerContext:Ctor(...)    self.__base.Ctor(self, ...)end---@return Context---@parm value booleanfunction PlayPlayerContext:setDestroy(value)    if (value ~= self:hasDestroy()) then        if (value) then            self:set_unique_component('destroy',PlayPlayer_comps.Destroy, true)        else            self:remove_unique_component('destroy')        end    end    return selfend---@return boolfunction PlayPlayerContext:hasDestroy()    return self:has_unique_component(PlayPlayer_comps.Destroy)end---@return boolfunction PlayPlayerContext:removeDestroy()    self:remove_unique_component('destroy')end---@return PlayPlayerEntity---@privatefunction PlayPlayerContext:_create_entity()    return self._entity_class:new()end---@return PlayPlayerEntityfunction PlayPlayerContext:CreateEntity()    return self:create_entity()end---@return PlayPlayerContextfunction PlayPlayerContext.PlayPlayerContext()    return classMap.PlayPlayerContext:new(classMap.PlayPlayerEntity)endreturn PlayPlayerContext