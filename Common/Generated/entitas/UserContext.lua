local EntityIndex = require("Common.entitas.EntityIndex")local PrimaryEntityIndex = require("Common.entitas.PrimaryEntityIndex")local Matcher = require("Common.entitas.Matcher")local User_comps = require('.UserComponents')---@class UserContext : entitas.Context---@field createEntity fun():UserEntitylocal UserContext = {}function UserContext:Ctor(...)    self.__base.Ctor(self, ...)end---@return Context---@parm value booleanfunction UserContext:setDestroy(value)    if (value ~= self:hasDestroy()) then        if (value) then            self:set_unique_component('destroy',User_comps.Destroy, true)        else            self:remove_unique_component('destroy')        end    end    return selfend---@return boolfunction UserContext:hasDestroy()    return self:has_unique_component(User_comps.Destroy)end---@return boolfunction UserContext:removeDestroy()    self:remove_unique_component('destroy')end---@return UserEntity---@privatefunction UserContext:_create_entity()    return self._entity_class:new()end---@return UserEntityfunction UserContext:CreateEntity()    return self:create_entity()end---@return UserContextfunction UserContext.UserContext()    return classMap.UserContext:new(classMap.UserEntity)endreturn UserContext