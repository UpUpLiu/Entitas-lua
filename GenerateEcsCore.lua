local t_remove = table.removelocal entitas = require("./entitas")local Game_comps = require("./GameComponents")local Context = entitas.Contextlocal Systems = entitas.Systemslocal Matcher = entitas.Matcher----------------------------GameEntity     start------------------------------------------------@class GameEntity---@field deltaTime deltaTimeComponent---@field index IndexComponent---@field sid sidComponent---@field player PlayerComponent---@field gameState GameStateComponent---@field changeGameState ChangeGameStateComponent---@field gameStateChanging GameStateChangingComponent---@field fireLevel FireLevelComponent---@field levelEndTime LevelEndTimeComponent---@field levelUseTime LevelUseTimeComponent---@field levelShowText LevelShowTextComponent---@field stepChangeRecord StepChangeRecordComponent---@field levelState LevelStateComponent---@field viewComponent ViewComponentComponent---@field viewEcsName viewEcsNameComponent---@field cCNode CCNodeComponent---@field fireNum FireNumComponent---@field fireNumNodeList FireNumNodeListComponent---@field fireNumText FireNumTextComponent---@field fireStickData FireStickDataComponent---@field fireStickRightData FireStickRightDataComponent---@field fireStickParentId FireStickParentIdComponent---@field fireStickNode FireStickNodeComponent---@field viewCommandList ViewCommandListComponent---@field tipping TippingComponent---@field resumeToStart ResumeToStartComponent---@field onClickFireStickNode OnClickFireStickNodeComponent---@field tipsText TipsTextComponent---@field resume ResumeComponent---@field useItem UseItemComponent---@field changeFireStick ChangeFireStickComponent---@field isChange IsChangeComponent---@field initGame InitGameComponent---@field gameConfig GameConfigComponent---@field gameData GameDataComponent---@field levelEnd LevelEndComponent---@field wxShare wxShareComponent---@field wxShareCallBack wxShareCallBackComponent---@field timeVal TimeValComponent---@field saveList SaveListComponentlocal GameEntity = GameEntity---@return booleanfunction GameEntity:hasdeltaTime()  return self:hasComponent(Game_comps.deltaTime)end---@return GameEntityfunction GameEntity:setdeltaTime(v)    if (v ~= self:hasdeltaTime()) then        if (v) then            self:addComponent(Game_comps.deltaTime, 'recoverTrigger')        else            self:removeComponent(Game_comps.deltaTime)        end    end    return selfend---@return booleanfunction GameEntity:hasIndex()  return self:hasComponent(Game_comps.Index)end---@return GameEntityfunction GameEntity:setIndex(v)    if (v ~= self:hasIndex()) then        if (v) then            self:addComponent(Game_comps.Index, IndexComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.Index)        end    end    return selfend---@return booleanfunction GameEntity:hassid()  return self:hasComponent(Game_comps.sid)end---@return GameEntityfunction GameEntity:setsid(v)    if (v ~= self:hassid()) then        if (v) then            self:addComponent(Game_comps.sid, sidComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.sid)        end    end    return selfend---@return booleanfunction GameEntity:hasPlayer()  return self:hasComponent(Game_comps.Player)end---@return GameEntityfunction GameEntity:setPlayer(v)    if (v ~= self:hasPlayer()) then        if (v) then            self:addComponent(Game_comps.Player, PlayerComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.Player)        end    end    return selfend---@return booleanfunction GameEntity:hasGameState()  return self:hasComponent(Game_comps.GameState)end---@return GameEntityfunction GameEntity:setGameState(v)    if (v ~= self:hasGameState()) then        if (v) then            self:addComponent(Game_comps.GameState, GameStateComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.GameState)        end    end    return selfend---@return booleanfunction GameEntity:hasChangeGameState()  return self:hasComponent(Game_comps.ChangeGameState)end---@return GameEntityfunction GameEntity:setChangeGameState(v)    if (v ~= self:hasChangeGameState()) then        if (v) then            self:addComponent(Game_comps.ChangeGameState, ChangeGameStateComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.ChangeGameState)        end    end    return selfend---@return booleanfunction GameEntity:hasGameStateChanging()  return self:hasComponent(Game_comps.GameStateChanging)end---@return GameEntityfunction GameEntity:setGameStateChanging(v)    if (v ~= self:hasGameStateChanging()) then        if (v) then            self:addComponent(Game_comps.GameStateChanging, GameStateChangingComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.GameStateChanging)        end    end    return selfend---@return booleanfunction GameEntity:hasFireLevel()  return self:hasComponent(Game_comps.FireLevel)end---@return GameEntityfunction GameEntity:setFireLevel(v)    if (v ~= self:hasFireLevel()) then        if (v) then            self:addComponent(Game_comps.FireLevel, FireLevelComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.FireLevel)        end    end    return selfend---@return booleanfunction GameEntity:hasLevelEndTime()  return self:hasComponent(Game_comps.LevelEndTime)end---@return GameEntityfunction GameEntity:setLevelEndTime(v)    if (v ~= self:hasLevelEndTime()) then        if (v) then            self:addComponent(Game_comps.LevelEndTime, LevelEndTimeComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.LevelEndTime)        end    end    return selfend---@return booleanfunction GameEntity:hasLevelUseTime()  return self:hasComponent(Game_comps.LevelUseTime)end---@return GameEntityfunction GameEntity:setLevelUseTime(v)    if (v ~= self:hasLevelUseTime()) then        if (v) then            self:addComponent(Game_comps.LevelUseTime, LevelUseTimeComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.LevelUseTime)        end    end    return selfend---@return booleanfunction GameEntity:hasLevelShowText()  return self:hasComponent(Game_comps.LevelShowText)end---@return GameEntityfunction GameEntity:setLevelShowText(v)    if (v ~= self:hasLevelShowText()) then        if (v) then            self:addComponent(Game_comps.LevelShowText, LevelShowTextComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.LevelShowText)        end    end    return selfend---@return booleanfunction GameEntity:hasStepChangeRecord()  return self:hasComponent(Game_comps.StepChangeRecord)end---@return GameEntityfunction GameEntity:setStepChangeRecord(v)    if (v ~= self:hasStepChangeRecord()) then        if (v) then            self:addComponent(Game_comps.StepChangeRecord, StepChangeRecordComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.StepChangeRecord)        end    end    return selfend---@return booleanfunction GameEntity:hasLevelState()  return self:hasComponent(Game_comps.LevelState)end---@return GameEntityfunction GameEntity:setLevelState(v)    if (v ~= self:hasLevelState()) then        if (v) then            self:addComponent(Game_comps.LevelState, LevelStateComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.LevelState)        end    end    return selfend---@return booleanfunction GameEntity:hasViewComponent()  return self:hasComponent(Game_comps.ViewComponent)end---@return GameEntityfunction GameEntity:setViewComponent(v)    if (v ~= self:hasViewComponent()) then        if (v) then            self:addComponent(Game_comps.ViewComponent, ViewComponentComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.ViewComponent)        end    end    return selfend---@return booleanfunction GameEntity:hasviewEcsName()  return self:hasComponent(Game_comps.viewEcsName)end---@return GameEntityfunction GameEntity:setviewEcsName(v)    if (v ~= self:hasviewEcsName()) then        if (v) then            self:addComponent(Game_comps.viewEcsName, viewEcsNameComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.viewEcsName)        end    end    return selfend---@return booleanfunction GameEntity:hasCCNode()  return self:hasComponent(Game_comps.CCNode)end---@return GameEntityfunction GameEntity:setCCNode(v)    if (v ~= self:hasCCNode()) then        if (v) then            self:addComponent(Game_comps.CCNode, CCNodeComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.CCNode)        end    end    return selfend---@return booleanfunction GameEntity:hasFireNum()  return self:hasComponent(Game_comps.FireNum)end---@return GameEntityfunction GameEntity:setFireNum(v)    if (v ~= self:hasFireNum()) then        if (v) then            self:addComponent(Game_comps.FireNum, FireNumComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.FireNum)        end    end    return selfend---@return booleanfunction GameEntity:hasFireNumNodeList()  return self:hasComponent(Game_comps.FireNumNodeList)end---@return GameEntityfunction GameEntity:setFireNumNodeList(v)    if (v ~= self:hasFireNumNodeList()) then        if (v) then            self:addComponent(Game_comps.FireNumNodeList, FireNumNodeListComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.FireNumNodeList)        end    end    return selfend---@return booleanfunction GameEntity:hasFireNumText()  return self:hasComponent(Game_comps.FireNumText)end---@return GameEntityfunction GameEntity:setFireNumText(v)    if (v ~= self:hasFireNumText()) then        if (v) then            self:addComponent(Game_comps.FireNumText, FireNumTextComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.FireNumText)        end    end    return selfend---@return booleanfunction GameEntity:hasFireStickData()  return self:hasComponent(Game_comps.FireStickData)end---@return GameEntityfunction GameEntity:setFireStickData(v)    if (v ~= self:hasFireStickData()) then        if (v) then            self:addComponent(Game_comps.FireStickData, FireStickDataComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.FireStickData)        end    end    return selfend---@return booleanfunction GameEntity:hasFireStickRightData()  return self:hasComponent(Game_comps.FireStickRightData)end---@return GameEntityfunction GameEntity:setFireStickRightData(v)    if (v ~= self:hasFireStickRightData()) then        if (v) then            self:addComponent(Game_comps.FireStickRightData, FireStickRightDataComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.FireStickRightData)        end    end    return selfend---@return booleanfunction GameEntity:hasFireStickParentId()  return self:hasComponent(Game_comps.FireStickParentId)end---@return GameEntityfunction GameEntity:setFireStickParentId(v)    if (v ~= self:hasFireStickParentId()) then        if (v) then            self:addComponent(Game_comps.FireStickParentId, FireStickParentIdComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.FireStickParentId)        end    end    return selfend---@return booleanfunction GameEntity:hasFireStickNode()  return self:hasComponent(Game_comps.FireStickNode)end---@return GameEntityfunction GameEntity:setFireStickNode(v)    if (v ~= self:hasFireStickNode()) then        if (v) then            self:addComponent(Game_comps.FireStickNode, FireStickNodeComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.FireStickNode)        end    end    return selfend---@return booleanfunction GameEntity:hasViewCommandList()  return self:hasComponent(Game_comps.ViewCommandList)end---@return GameEntityfunction GameEntity:setViewCommandList(v)    if (v ~= self:hasViewCommandList()) then        if (v) then            self:addComponent(Game_comps.ViewCommandList, ViewCommandListComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.ViewCommandList)        end    end    return selfend---@return booleanfunction GameEntity:hasInput()  return self:hasComponent(Game_comps.Input)end---@return GameEntityfunction GameEntity:setInput(v)    if (v ~= self:hasInput()) then        if (v) then            self:addComponent(Game_comps.Input, InputComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.Input)        end    end    return selfend---@return booleanfunction GameEntity:hasTipping()  return self:hasComponent(Game_comps.Tipping)end---@return GameEntityfunction GameEntity:setTipping(v)    if (v ~= self:hasTipping()) then        if (v) then            self:addComponent(Game_comps.Tipping, TippingComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.Tipping)        end    end    return selfend---@return booleanfunction GameEntity:hasDestroy()  return self:hasComponent(Game_comps.Destroy)end---@return GameEntityfunction GameEntity:setDestroy(v)    if (v ~= self:hasDestroy()) then        if (v) then            self:addComponent(Game_comps.Destroy, DestroyComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.Destroy)        end    end    return selfend---@return booleanfunction GameEntity:hasResumeToStart()  return self:hasComponent(Game_comps.ResumeToStart)end---@return GameEntityfunction GameEntity:setResumeToStart(v)    if (v ~= self:hasResumeToStart()) then        if (v) then            self:addComponent(Game_comps.ResumeToStart, ResumeToStartComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.ResumeToStart)        end    end    return selfend---@return booleanfunction GameEntity:hasOnClickFireStickNode()  return self:hasComponent(Game_comps.OnClickFireStickNode)end---@return GameEntityfunction GameEntity:setOnClickFireStickNode(v)    if (v ~= self:hasOnClickFireStickNode()) then        if (v) then            self:addComponent(Game_comps.OnClickFireStickNode, OnClickFireStickNodeComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.OnClickFireStickNode)        end    end    return selfend---@return booleanfunction GameEntity:hasTipsText()  return self:hasComponent(Game_comps.TipsText)end---@return GameEntityfunction GameEntity:setTipsText(v)    if (v ~= self:hasTipsText()) then        if (v) then            self:addComponent(Game_comps.TipsText, TipsTextComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.TipsText)        end    end    return selfend---@return booleanfunction GameEntity:hasResume()  return self:hasComponent(Game_comps.Resume)end---@return GameEntityfunction GameEntity:setResume(v)    if (v ~= self:hasResume()) then        if (v) then            self:addComponent(Game_comps.Resume, ResumeComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.Resume)        end    end    return selfend---@return booleanfunction GameEntity:hasUseItem()  return self:hasComponent(Game_comps.UseItem)end---@return GameEntityfunction GameEntity:setUseItem(v)    if (v ~= self:hasUseItem()) then        if (v) then            self:addComponent(Game_comps.UseItem, UseItemComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.UseItem)        end    end    return selfend---@return booleanfunction GameEntity:hasChangeFireStick()  return self:hasComponent(Game_comps.ChangeFireStick)end---@return GameEntityfunction GameEntity:setChangeFireStick(v)    if (v ~= self:hasChangeFireStick()) then        if (v) then            self:addComponent(Game_comps.ChangeFireStick, ChangeFireStickComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.ChangeFireStick)        end    end    return selfend---@return booleanfunction GameEntity:hasIsChange()  return self:hasComponent(Game_comps.IsChange)end---@return GameEntityfunction GameEntity:setIsChange(v)    if (v ~= self:hasIsChange()) then        if (v) then            self:addComponent(Game_comps.IsChange, IsChangeComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.IsChange)        end    end    return selfend---@return booleanfunction GameEntity:hasInitGame()  return self:hasComponent(Game_comps.InitGame)end---@return GameEntityfunction GameEntity:setInitGame(v)    if (v ~= self:hasInitGame()) then        if (v) then            self:addComponent(Game_comps.InitGame, InitGameComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.InitGame)        end    end    return selfend---@return booleanfunction GameEntity:hasGameConfig()  return self:hasComponent(Game_comps.GameConfig)end---@return GameEntityfunction GameEntity:setGameConfig(v)    if (v ~= self:hasGameConfig()) then        if (v) then            self:addComponent(Game_comps.GameConfig, GameConfigComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.GameConfig)        end    end    return selfend---@return booleanfunction GameEntity:hasGameData()  return self:hasComponent(Game_comps.GameData)end---@return GameEntityfunction GameEntity:setGameData(v)    if (v ~= self:hasGameData()) then        if (v) then            self:addComponent(Game_comps.GameData, GameDataComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.GameData)        end    end    return selfend---@return booleanfunction GameEntity:hasLevelEnd()  return self:hasComponent(Game_comps.LevelEnd)end---@return GameEntityfunction GameEntity:setLevelEnd(v)    if (v ~= self:hasLevelEnd()) then        if (v) then            self:addComponent(Game_comps.LevelEnd, LevelEndComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.LevelEnd)        end    end    return selfend---@return booleanfunction GameEntity:haswxShare()  return self:hasComponent(Game_comps.wxShare)end---@return GameEntityfunction GameEntity:setwxShare(v)    if (v ~= self:haswxShare()) then        if (v) then            self:addComponent(Game_comps.wxShare, wxShareComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.wxShare)        end    end    return selfend---@return booleanfunction GameEntity:haswxShareCallBack()  return self:hasComponent(Game_comps.wxShareCallBack)end---@return GameEntityfunction GameEntity:setwxShareCallBack(v)    if (v ~= self:haswxShareCallBack()) then        if (v) then            self:addComponent(Game_comps.wxShareCallBack, wxShareCallBackComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.wxShareCallBack)        end    end    return selfend---@return booleanfunction GameEntity:hasTimeVal()  return self:hasComponent(Game_comps.TimeVal)end---@return GameEntityfunction GameEntity:setTimeVal(v)    if (v ~= self:hasTimeVal()) then        if (v) then            self:addComponent(Game_comps.TimeVal, TimeValComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.TimeVal)        end    end    return selfend---@return booleanfunction GameEntity:hasSaveList()  return self:hasComponent(Game_comps.SaveList)end---@return GameEntityfunction GameEntity:setSaveList(v)    if (v ~= self:hasSaveList()) then        if (v) then            self:addComponent(Game_comps.SaveList, SaveListComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.SaveList)        end    end    return selfend---@return booleanfunction GameEntity:hasSaveTrigger()  return self:hasComponent(Game_comps.SaveTrigger)end---@return GameEntityfunction GameEntity:setSaveTrigger(v)    if (v ~= self:hasSaveTrigger()) then        if (v) then            self:addComponent(Game_comps.SaveTrigger, SaveTriggerComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.SaveTrigger)        end    end    return selfend---@return booleanfunction GameEntity:hasRecoverTrigger()  return self:hasComponent(Game_comps.RecoverTrigger)end---@return GameEntityfunction GameEntity:setRecoverTrigger(v)    if (v ~= self:hasRecoverTrigger()) then        if (v) then            self:addComponent(Game_comps.RecoverTrigger, RecoverTriggerComponent, 'recoverTrigger')        else            self:removeComponent(Game_comps.RecoverTrigger)        end    end    return selfend----------------------------Entity      end-------------------------------------------------------------------------Matcher     start----------------------------------------------@class GameMatcher---@field AnyOf fun(...) : GenerateMatcher---@field AllOf fun(...) : GenerateMatcher---@field noneOf fun(...) : GenerateMatcher---@field deltaTime : GenerateMatcher---@field Index : GenerateMatcher---@field sid : GenerateMatcher---@field Player : GenerateMatcher---@field GameState : GenerateMatcher---@field ChangeGameState : GenerateMatcher---@field GameStateChanging : GenerateMatcher---@field FireLevel : GenerateMatcher---@field LevelEndTime : GenerateMatcher---@field LevelUseTime : GenerateMatcher---@field LevelShowText : GenerateMatcher---@field StepChangeRecord : GenerateMatcher---@field LevelState : GenerateMatcher---@field ViewComponent : GenerateMatcher---@field viewEcsName : GenerateMatcher---@field CCNode : GenerateMatcher---@field FireNum : GenerateMatcher---@field FireNumNodeList : GenerateMatcher---@field FireNumText : GenerateMatcher---@field FireStickData : GenerateMatcher---@field FireStickRightData : GenerateMatcher---@field FireStickParentId : GenerateMatcher---@field FireStickNode : GenerateMatcher---@field ViewCommandList : GenerateMatcher---@field Input : GenerateMatcher---@field Tipping : GenerateMatcher---@field Destroy : GenerateMatcher---@field ResumeToStart : GenerateMatcher---@field OnClickFireStickNode : GenerateMatcher---@field TipsText : GenerateMatcher---@field Resume : GenerateMatcher---@field UseItem : GenerateMatcher---@field ChangeFireStick : GenerateMatcher---@field IsChange : GenerateMatcher---@field InitGame : GenerateMatcher---@field GameConfig : GenerateMatcher---@field GameData : GenerateMatcher---@field LevelEnd : GenerateMatcher---@field wxShare : GenerateMatcher---@field wxShareCallBack : GenerateMatcher---@field TimeVal : GenerateMatcher---@field SaveList : GenerateMatcher---@field SaveTrigger : GenerateMatcher---@field RecoverTrigger : GenerateMatcherGameMatcher = Entitas.MatcherGameMatcher.deltaTime = GameMatcher.AllOf(Game_comps.deltaTime)GameMatcher.Index = GameMatcher.AllOf(Game_comps.Index)GameMatcher.sid = GameMatcher.AllOf(Game_comps.sid)GameMatcher.Player = GameMatcher.AllOf(Game_comps.Player)GameMatcher.GameState = GameMatcher.AllOf(Game_comps.GameState)GameMatcher.ChangeGameState = GameMatcher.AllOf(Game_comps.ChangeGameState)GameMatcher.GameStateChanging = GameMatcher.AllOf(Game_comps.GameStateChanging)GameMatcher.FireLevel = GameMatcher.AllOf(Game_comps.FireLevel)GameMatcher.LevelEndTime = GameMatcher.AllOf(Game_comps.LevelEndTime)GameMatcher.LevelUseTime = GameMatcher.AllOf(Game_comps.LevelUseTime)GameMatcher.LevelShowText = GameMatcher.AllOf(Game_comps.LevelShowText)GameMatcher.StepChangeRecord = GameMatcher.AllOf(Game_comps.StepChangeRecord)GameMatcher.LevelState = GameMatcher.AllOf(Game_comps.LevelState)GameMatcher.ViewComponent = GameMatcher.AllOf(Game_comps.ViewComponent)GameMatcher.viewEcsName = GameMatcher.AllOf(Game_comps.viewEcsName)GameMatcher.CCNode = GameMatcher.AllOf(Game_comps.CCNode)GameMatcher.FireNum = GameMatcher.AllOf(Game_comps.FireNum)GameMatcher.FireNumNodeList = GameMatcher.AllOf(Game_comps.FireNumNodeList)GameMatcher.FireNumText = GameMatcher.AllOf(Game_comps.FireNumText)GameMatcher.FireStickData = GameMatcher.AllOf(Game_comps.FireStickData)GameMatcher.FireStickRightData = GameMatcher.AllOf(Game_comps.FireStickRightData)GameMatcher.FireStickParentId = GameMatcher.AllOf(Game_comps.FireStickParentId)GameMatcher.FireStickNode = GameMatcher.AllOf(Game_comps.FireStickNode)GameMatcher.ViewCommandList = GameMatcher.AllOf(Game_comps.ViewCommandList)GameMatcher.Input = GameMatcher.AllOf(Game_comps.Input)GameMatcher.Tipping = GameMatcher.AllOf(Game_comps.Tipping)GameMatcher.Destroy = GameMatcher.AllOf(Game_comps.Destroy)GameMatcher.ResumeToStart = GameMatcher.AllOf(Game_comps.ResumeToStart)GameMatcher.OnClickFireStickNode = GameMatcher.AllOf(Game_comps.OnClickFireStickNode)GameMatcher.TipsText = GameMatcher.AllOf(Game_comps.TipsText)GameMatcher.Resume = GameMatcher.AllOf(Game_comps.Resume)GameMatcher.UseItem = GameMatcher.AllOf(Game_comps.UseItem)GameMatcher.ChangeFireStick = GameMatcher.AllOf(Game_comps.ChangeFireStick)GameMatcher.IsChange = GameMatcher.AllOf(Game_comps.IsChange)GameMatcher.InitGame = GameMatcher.AllOf(Game_comps.InitGame)GameMatcher.GameConfig = GameMatcher.AllOf(Game_comps.GameConfig)GameMatcher.GameData = GameMatcher.AllOf(Game_comps.GameData)GameMatcher.LevelEnd = GameMatcher.AllOf(Game_comps.LevelEnd)GameMatcher.wxShare = GameMatcher.AllOf(Game_comps.wxShare)GameMatcher.wxShareCallBack = GameMatcher.AllOf(Game_comps.wxShareCallBack)GameMatcher.TimeVal = GameMatcher.AllOf(Game_comps.TimeVal)GameMatcher.SaveList = GameMatcher.AllOf(Game_comps.SaveList)GameMatcher.SaveTrigger = GameMatcher.AllOf(Game_comps.SaveTrigger)GameMatcher.RecoverTrigger = GameMatcher.AllOf(Game_comps.RecoverTrigger)----------------------------Matcher     end-------------------------------------------------------------------------Context   start------------------------------------------------@class GameContext : entitas.Context ---@field isdeltaTimeEntity bool ---@field isIndexEntity bool ---@field issidEntity bool ---@field isPlayerEntity bool ---@field isGameStateEntity bool ---@field isChangeGameStateEntity bool ---@field isGameStateChangingEntity bool ---@field isFireLevelEntity bool ---@field isLevelEndTimeEntity bool ---@field isLevelUseTimeEntity bool ---@field isLevelShowTextEntity bool ---@field isStepChangeRecordEntity bool ---@field isLevelStateEntity bool ---@field isViewComponentEntity bool ---@field isviewEcsNameEntity bool ---@field isCCNodeEntity bool ---@field isFireNumEntity bool ---@field isFireNumNodeListEntity bool ---@field isFireNumTextEntity bool ---@field isFireStickDataEntity bool ---@field isFireStickRightDataEntity bool ---@field isFireStickParentIdEntity bool ---@field isFireStickNodeEntity bool ---@field isViewCommandListEntity bool ---@field isInputEntity bool ---@field isTippingEntity bool ---@field isDestroyEntity bool ---@field isResumeToStartEntity bool ---@field isOnClickFireStickNodeEntity bool ---@field isTipsTextEntity bool ---@field isResumeEntity bool ---@field isUseItemEntity bool ---@field isChangeFireStickEntity bool ---@field isIsChangeEntity bool ---@field isInitGameEntity bool ---@field isGameConfigEntity bool ---@field isGameDataEntity bool ---@field isLevelEndEntity bool ---@field iswxShareEntity bool ---@field iswxShareCallBackEntity bool ---@field isTimeValEntity bool ---@field isSaveListEntity bool ---@field isSaveTriggerEntity bool ---@field isRecoverTriggerEntity bool---@field createEntity fun():GameEntitylocal GameContext = {}                                                                                                                                                                                ----------------------------GameIndexes     start---------------------------------------------function GameContext:initGenerateEntityIndexes()                                                                                                                                                                                end----------------------------Context    end---------------------------------------------return GameContextlocal t_remove = table.removelocal entitas = require("./entitas")local GameState_comps = require("./GameStateComponents")local Context = entitas.Contextlocal Systems = entitas.Systemslocal Matcher = entitas.Matcher----------------------------GameStateEntity     start------------------------------------------------@class GameStateEntity---@field socores SocoresComponent---@field testState TestStateComponentlocal GameStateEntity = GameStateEntity---@return booleanfunction GameStateEntity:hasSocores()  return self:hasComponent(GameState_comps.Socores)end---@return GameStateEntityfunction GameStateEntity:setSocores(v)    if (v ~= self:hasSocores()) then        if (v) then            self:addComponent(GameState_comps.Socores, SocoresComponent, 'testState')        else            self:removeComponent(GameState_comps.Socores)        end    end    return selfend---@return booleanfunction GameStateEntity:hasTestState()  return self:hasComponent(GameState_comps.TestState)end---@return GameStateEntityfunction GameStateEntity:setTestState(v)    if (v ~= self:hasTestState()) then        if (v) then            self:addComponent(GameState_comps.TestState, TestStateComponent, 'testState')        else            self:removeComponent(GameState_comps.TestState)        end    end    return selfend----------------------------Entity      end-------------------------------------------------------------------------Matcher     start----------------------------------------------@class GameStateMatcher---@field AnyOf fun(...) : GenerateMatcher---@field AllOf fun(...) : GenerateMatcher---@field noneOf fun(...) : GenerateMatcher---@field Socores : GenerateMatcher---@field TestState : GenerateMatcherGameStateMatcher = Entitas.MatcherGameStateMatcher.Socores = GameStateMatcher.AllOf(GameState_comps.Socores)GameStateMatcher.TestState = GameStateMatcher.AllOf(GameState_comps.TestState)----------------------------Matcher     end-------------------------------------------------------------------------Context   start------------------------------------------------@class GameStateContext : entitas.Context ---@field isSocoresEntity bool ---@field isTestStateEntity bool---@field createEntity fun():GameStateEntitylocal GameStateContext = {}        ----------------------------GameStateIndexes     start---------------------------------------------function GameStateContext:initGenerateEntityIndexes()        end----------------------------Context    end---------------------------------------------return GameStateContext